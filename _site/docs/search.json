[{"slug":"advanced-topics","title":"Advanced topics","content":"Advanced topics\n\nThis page needs to be written, want to help out? Checkout GitHub repo!","destination":"advanced-topics.html"},{"slug":"community-guide","title":"Community guide","content":"Community guide\n\nThis page needs to be written, want to help out? Checkout GitHub repo!","destination":"community-guide.html"},{"slug":"configuration","title":"Configuration","content":"Configuration\n\nThis page needs to be written, want to help out? Checkout GitHub repo!","destination":"configuration.html"},{"slug":"contributors","title":"Contributors","content":"Contributors\n\nJSON Schema for PHP would not exist without the dedication, time, and expertise of our community.\nEvery feature, improvement, and bug fix is the result of people generously sharing their skills and ideas.\nWe are deeply grateful for each and every contribution \u2014 large or small \u2014 that has helped shape this project.\n\nCheck out all the amazing people who have made this possible:\n\n\n\nMade with contrib.rocks.","destination":"contributors.html"},{"slug":"getting-started","title":"Getting started","content":"Getting started\n\nInstalling JSON Schema Using Composer\nThe recommended method of installing JSON Schema is using Composer, which installs the required dependencies on\na per-project basis.\n\ncomposer require justinrainbow\/json-schema\n\nValidating using a schema on disk\n\nvalidate($data, (object)['$ref' => 'file:\/\/' . realpath('schema.json')]);\n\nif ($validator->isValid()) {\necho \"The supplied JSON validates against the schema.\\n\";\n} else {\necho \"JSON does not validate. Violations:\\n\";\nforeach ($validator->getErrors() as $error) {\nprintf(\"[%s] %s\\n\", $error['property'], $error['message']);\n}\n}\n\nValidating using an inline schema\n\naddSchema('internal:\/\/mySchema', $jsonSchema);\n$validator = new Validator(new Factory($schemaStorage));\n\n$validator->validate($data, $jsonSchemaObject);\nif ($validator->isValid()) {\necho \"The supplied JSON validates against the schema.\\n\";\n} else {\necho \"JSON does not validate. Violations:\\n\";\nforeach ($validator->getErrors() as $error) {\nprintf(\"[%s] %s\\n\", $error['property'], $error['message']);\n}\n}","destination":"getting-started.html"}]